# MyBatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.config-location=classpath:mybatis-config.xml

spring.shardingsphere.props.sql.show=true

# 数据源配置
spring.shardingsphere.datasource.names=ds0,ds1
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.0.1:3306/ds0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://127.0.0.1:3306/ds1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

# 对于没有做任何业务拆分的表，直接走本默认数据    源即可
#spring.shardingsphere.sharding.default-data-source-name=ds0
# 默认策略
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=username
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds${user_id % 2}

#t_order配置
#真实数据节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
# 分库算法
spring.shardingsphere.sharding.tables.t_order.databaseStrategy.inline.shardingColumn=user_id
spring.shardingsphere.sharding.tables.t_order.databaseStrategy.inline.algorithm-expression=ds${user_id % 2}
# 分表算法
spring.shardingsphere.sharding.tables.t_order.tableStrategy.inline.shardingColumn=user_id
spring.shardingsphere.sharding.tables.t_order.tableStrategy.inline.algorithm-expression=t_order_${user_id % 2}
# 分布式主键生成
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_no
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

# t_order_item 配置
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.databaseStrategy.inline.shardingColumn=user_id
spring.shardingsphere.sharding.tables.t_order_item.databaseStrategy.inline.algorithm-expression=ds${user_id % 2}
spring.shardingsphere.sharding.tables.t_order_item.tableStrategy.inline.shardingColumn=user_id
spring.shardingsphere.sharding.tables.t_order_item.tableStrategy.inline.algorithm-expression=t_order_${user_id % 2}
#
# 绑定表规则列表，防止关联查询出现笛卡尔积
spring.shardingsphere.sharding.binding-tables[0] = t_order,t_order_item
# 广播表
spring.shardingsphere.sharding.broadcast-tables=t_config




#读写分离配置
#从库负载均衡算法 ROUND_ROBIN,RANDOM 轮询和随机
#spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin
#spring.shardingsphere.masterslave.name=ms
#spring.shardingsphere.masterslave.master-data-source-name=ds0
#spring.shardingsphere.masterslave.slave-data-source-names=ds1